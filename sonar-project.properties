# SonarQube/SonarCloud Configuration for Therac-25 Simulation
# This will detect the deadly bugs that caused patient deaths
sonar.organization=ingcristhian
sonar.projectKey=IngCristhian_ibero_calidad_software
sonar.projectName=Therac-25 Software Quality Simulation
sonar.projectVersion=1.0

# Source code directories
sonar.sources=src/simulator
sonar.tests=src/tests
sonar.python.coverage.reportPaths=coverage.xml

# Language-specific settings
sonar.language=python
sonar.python.xunit.reportPath=reports/static/test-results.xml

# Focus on critical issues that would catch Therac-25 bugs
sonar.issue.ignore.multicriteria=e1,e2,e3

# Enable detection of concurrency issues
sonar.issue.ignore.multicriteria.e1.ruleKey=python:S2386
sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.py

# Focus on these critical rules that would catch the Therac-25 bugs:
# - Synchronization issues (race conditions)
# - Integer overflow
# - Missing error handling
# - Complexity issues
# - Code duplication
# - Dead code

# Quality gates - strict for safety-critical code
sonar.qualitygate.wait=true

# Exclude test files from coverage requirements
sonar.coverage.exclusions=src/tests/**

# Include all Python files
sonar.inclusions=**/*.py

# Exclude generated files
sonar.exclusions=**/__pycache__/**,**/*.pyc,**/.pytest_cache/**

# Code analysis settings
sonar.python.pylint.reportPath=reports/static/pylint-report.txt

# Security scanning
sonar.security.hotspots.inheritFromParent=true