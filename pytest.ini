[tool:pytest]
# Pytest configuration for Therac-25 simulation tests

# Test discovery
testpaths = src/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts =
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src/simulator
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-report=html:htmlcov
    --cov-fail-under=80
    --junitxml=test-results.xml

# Markers for categorizing tests
markers =
    unit: Unit tests for individual components
    integration: Integration tests for full workflows
    concurrency: Tests for race conditions and threading issues
    accidents: Tests that reproduce the exact Therac-25 accidents
    overflow: Tests for counter overflow bugs
    race_condition: Tests for race condition bugs
    safety_critical: Tests for safety-critical functionality
    slow: Tests that take longer to run
    fast: Quick tests for rapid feedback

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning

# Minimum coverage for safety-critical code
# This ensures thorough testing that would catch bugs
minversion = 6.0

# Timeout for tests (safety-critical tests shouldn't hang)
timeout = 300

# Parallel execution
# -n auto will use all available CPUs for faster testing
# This helps catch race conditions that only appear under concurrent load